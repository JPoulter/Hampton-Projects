========================================================================================================
===  Tidy report for :H:\support\changePassword.au3
========================================================================================================

00001    #region ;**** Directives created by AutoIt3Wrapper_GUI ****
00002    #AutoIt3Wrapper_icon=favicon.ico
00003    #AutoIt3Wrapper_outfile=changePassword.exe
00004    #AutoIt3Wrapper_Res_Comment=In-A-Flash™ Secure USB document management system.
00005    #AutoIt3Wrapper_Res_Description=Provide automated sequence to change the password of the encrypted volume.
00006    #AutoIt3Wrapper_Res_Fileversion=1.0.0.3
00007    #AutoIt3Wrapper_Res_LegalCopyright=©2010 Hampton Consulting, LLC.
00008    #AutoIt3Wrapper_Run_Tidy=y
00009    #Tidy_Parameters=/gd
00010    #endregion ;**** Directives created by AutoIt3Wrapper_GUI ****
00011    
00012    
00013    ; Establish all of the variables used in this script
00014    Dim $encryptedTarget
00015    Dim $oldPassword
00016    Dim $newPassword
00017    Dim $runtrueCrypt
00018    
00019    ; Set the encrypted file and TrueCrypt files to use on the USB drive
00020    
00021    $runtrueCrypt = $CmdLine[1]
00022    ;MsgBox(0,"runtruecrypt",$runtrueCrypt)
00023    
00024    $oldPassword = "whopper"
00025    $newPassword = $CmdLine[2]
00026    ;MsgBox(0,"password",$newPassword)
00027    
00028    $encryptedTarget = $CmdLine[3] & "bk_manuals"
00029    ;MsgBox(0,"target",$encryptedTarget)
00030    
00031    ; Run TrueCrypt.  Enter the encrypted volume in the correct box, click 'volume tools' and then
00032    ; select 'change password' from the drop down list
00033    Run($runtrueCrypt)
00034    
00035    ; wait for the main screen to become active
00036    WinWaitActive("TrueCrypt", "Auto-Mount Devices")
00037    ControlFocus("TrueCrypt", "Auto-Mount Devices", "[CLASS:Edit; INSTANCE:1]")
00038    ControlSend("TrueCrypt", "Auto-Mount Devices", "[CLASS:Edit; INSTANCE:1]", "") ; Clear out the box first!
00039    ControlSend("TrueCrypt", "Auto-Mount Devices", "[CLASS:Edit; INSTANCE:1]", $encryptedTarget) ; populate the volume selection box
00040    Send("!t") ; click the "Volume Tools..." button
00041    Send("{DOWN}") ; hit the 'down' key once
00042    Send("{ENTER}") ; hit the 'enter' key to select change volume password
00043    
00044    
00045  +-While 1
00046  |    
00047  |    ; Wait for the next screen appears and then enter the existing and new passwords into the correct blocks
00048  |    ; and hit the enter key on the screen
00049  |  +-If WinActive("Change Password or Keyfiles", "Confirm Password") Then
00050  |  |    WinActivate("Change Password or Keyfiles", "Confirm Password")
00051  |  |    ControlSend("Change Password or Keyfiles", "Confirm Password", "[CLASS:Edit; INSTANCE:1]", $oldPassword) ; enter the old password
00052  |  |    ControlSend("Change Password or Keyfiles", "Confirm Password", "[CLASS:Edit; INSTANCE:2]", $newPassword) ; enter the new password the first time
00053  |  |    ControlSend("Change Password or Keyfiles", "Confirm Password", "[CLASS:Edit; INSTANCE:3]", $newPassword) ; enter the new password the second time
00054  |  |    ControlClick("Change Password or Keyfiles", "Confirm Password", "[CLASS:Button; INSTANCE:7]") ; the OK button
00055  |  +-EndIf
00056  |    
00057  |    ; If the short password message box appears, just hit OK to clear it off the screen and proceed
00058  |  +-If WinActive("TrueCrypt", "Short passwords are easy to crack") Then
00059  |  |    WinActivate("TrueCrypt", "Short passwords are easy to crack")
00060  |  |    ControlClick("TrueCrypt", "Short passwords are easy to crack", "[CLASS:Button; INSTANCE:1]") ; the YES button
00061  |  +-EndIf
00062  |    
00063  |    ; Click the 'continue' button to clear this window and start the password change process
00064  |  +-If WinActive("TrueCrypt - Random Pool Enrichment", "Move your mouse") Then
00065  |  |    WinActivate("TrueCrypt - Random Pool Enrichment", "Move your mouse")
00066  |  |    ControlClick("TrueCrypt - Random Pool Enrichment", "", "[CLASS:Button; INSTANCE:1]") ; the CONTINUE button
00067  |  +-EndIf
00068  |    
00069  |  +-If WinActive("TrueCrypt", "read the section") Then
00070  |  |    WinActivate("TrueCrypt", "read the section")
00071  |  |    ControlClick("TrueCrypt", "read the section", "[CLASS:Button; INSTANCE:1]") ; the OK button
00072  v--|----ExitLoop
00073  |  +-EndIf
00074  |    
00075  |    ; if the person enters the wrong password, TC pops up another window asking them to re-enter the
00076  |    ; correct password.  If this happens it needs to be captured and then all subsequent windows closed
00077  |    ; so the changePassword.vb coding can take over.
00078  |  +-If WinActive("TrueCrypt", "Incorrect password") Then
00079  |  |    WinActivate("TrueCrypt", "Incorrect password")
00080  |  |    ControlClick("TrueCrypt", "Incorrect password", "[CLASS:Button; INSTANCE:1]")
00081  |  |    WinActivate("Change Password or Keyfiles", "Confirm Password")
00082  |  |    ControlClick("Change Password or Keyfiles", "Confirm Password", "[CLASS:Button; INSTANCE:8]")
00083  |  |    WinActivate("TrueCrypt", "Volume")
00084  |  |    ControlClick("TrueCrypt", "Volume", "[CLASS:Button; INSTANCE:11]")
00085  |  |    Exit 2
00086  |  +-EndIf
00087  |    Sleep(150)
00088  +-WEnd
00089    
00090    ; Grab the main TrueCrypt screen and send the EXIT command to close it out.
00091    WinActivate("TrueCrypt", "Auto-Mount Devices")
00092    ControlClick("TrueCrypt", "Auto-Mount Devices", "[CLASS:Button; INSTANCE:11]") ; the EXIT button
00093    
00094    ; MsgBox(0, "", "Just before Exit")
00095    
00096    Exit
00097    
00098    ;EndIf

======================
=== xref reports =====
======================

== User functions =================================================================================================
                          Func
Function name             Row     Referenced at Row(s)
========================= ====== ==================================================================================

#### indicates that this specific variable only occurs one time in the script.
---- indicates that this specific variable isn't declared with Dim/Local/Global/Const.

== Variables ======================================================================================================
Variable name             Dim   Used in Row(s)
========================= ===== ===================================================================================
$CmdLine                  ----- 00021 00025 00028
$encryptedTarget          00014 00028 00039
$newPassword              00016 00025 00052 00053
$oldPassword              00015 00024 00051
$runtrueCrypt             00017 00021 00033
